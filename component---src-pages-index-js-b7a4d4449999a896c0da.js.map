{"version":3,"sources":["webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/pages/index.js","webpack:///./src/components/tags/TechTag.js"],"names":["Bio","author","tagline","className","src","mraarif","style","maxWidth","alt","SocialLinks","contacts","href","linkedin","title","size","color","github","stackoverflow","twitter","instagram","TechTags","props","techTags","labels","posts","labelsMeta","map","label","should_link","forEach","post","node","frontmatter","tags","includes","tag","i","push","TechTag","key","tech","name","Sidebar","query","render","data","site","siteMetadata","to","allMarkdownRemark","edges","pageQuery","IndexPage","nextPage","toString","hasNextPage","totalCount","keywords","id","fields","slug","date","excerpt","getTechTags","rel","textDecoration","fontSize","role","viewBox","xmlns","width","height","fill","d"],"mappings":"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","file":"component---src-pages-index-js-b7a4d4449999a896c0da.js","sourcesContent":["import React from \"react\"\nimport \"./sidebar.css\"\n\nimport mraarif from \"../../images/profile-photo.jpg\"\n\nconst Bio = ({ author, tagline }) => {\n\n  return (\n    <div className=\"bio-main w-75\">\n      <img src={mraarif} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\"/>\n      <h3 className=\"mt-2 author-bio\">{author}</h3>\n      <small className=\"text-muted\">{tagline}</small>\n    </div>\n  )\n}\n\nexport default Bio","import React from \"react\"\nimport { FaGithubSquare, FaInstagram, FaLinkedin, FaStackOverflow, FaTwitterSquare } from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\nconst SocialLinks = ({ contacts }) => {\n  return (\n    <div className=\"side-social-links float-left mt-3 mb-3\">\n      <a className=\"text-secondary p-2\" href={contacts.linkedin}>\n        <span title=\"Linked In\">\n          <FaLinkedin size={26} style={{ color: \"secondary\" }}/>\n        </span>\n      </a>\n      <a className=\"text-secondary p-2\" href={contacts.github}>\n        <span title=\"GitHub\">\n          <FaGithubSquare size={26} style={{ color: \"secondary\" }}/>\n        </span>\n      </a>\n      <a className=\"text-secondary p-2\" href={contacts.stackoverflow}>\n        <span title=\"Stack Overflow\">\n          <FaStackOverflow size={26} style={{ color: \"secondary\" }}/>\n        </span>\n      </a>\n      <a className=\"text-secondary p-2\" href={contacts.twitter}>\n        <span title=\"Twitter\">\n          <FaTwitterSquare size={26} style={{ color: \"secondary\" }}/>\n        </span>\n      </a>\n      <a className=\"text-secondary p-2\" href={contacts.instagram}>\n        <span title=\"instagram\">\n          <FaInstagram size={26} style={{ color: \"secondary\" }}/>\n        </span>\n      </a>\n    </div>\n  )\n}\n\nexport default SocialLinks\n","import React from \"react\"\n\nimport TechTag from \"../tags/TechTag\"\n\nconst TechTags = (props) => {\n  const labels = props.labels\n  const posts = props.posts\n\n  const labelsMeta = labels.map(label => {\n    let should_link = false\n    posts.forEach(post => {\n      if (post.node.frontmatter.tags.includes(label.tag)) {\n        should_link = true\n      }\n    })\n    return [label.tag, should_link]\n  })\n\n  // const categories = labelCount.filter(label => {\n  //     return label[1] > 0\n  // })\n  //\n  // const tags = categories.map(category => {\n  //     return category[0]\n  // })\n\n  const getTechTags = (tags) => {\n    const techTags = []\n    tags.forEach((tag, i) => {\n      labels.forEach((label) => {\n        if (tag[0] === label.tag) {\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size}\n                                 color={label.color} should_link={tag[1]}/>)\n        }\n      })\n    })\n    return techTags\n  }\n\n\n  return (\n    <>\n      <h4>Tech Topics</h4>\n      <div className=\"d-block\">\n        {getTechTags(labelsMeta)}\n      </div>\n    </>\n  )\n}\n\n\nexport default TechTags","import React from \"react\"\nimport { graphql, Link, StaticQuery } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTags from \"./TechTags\"\n\nconst Sidebar = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteBioQuery {\n          site {\n            siteMetadata {\n              title\n              tagline\n              author\n              contacts {\n                linkedin\n                github\n                stackoverflow\n                twitter\n                instagram\n              }\n              labels {\n                tag\n                tech\n                name\n                size\n                color\n              }\n            }\n          }\n          allMarkdownRemark(\n            limit: 10\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { published: { eq: true } } }\n          ) {\n            edges {\n              node {\n                frontmatter {\n                  tags\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <div className=\"sidebar-main border-right\">\n            <Bio\n              author={data.site.siteMetadata.author}\n              tagline={data.site.siteMetadata.tagline}\n            />\n            <SocialLinks contacts={data.site.siteMetadata.contacts}/>\n            <div className=\"page-links\">\n              <Link to=\"/\">\n                <span className=\"text-dark d-block py-1\">Blog Home</span>\n              </Link>\n              <Link to=\"/about\">\n                <span className=\"text-dark d-block py-1\">About</span>\n              </Link>\n              <Link to=\"/archive\">\n                <span className=\"text-dark d-block py-1\">Archive</span>\n              </Link>\n            </div>\n            <div className=\"tech-tags mt-4\">\n              <TechTags\n                labels={data.site.siteMetadata.labels}\n                posts={data.allMarkdownRemark.edges}\n              />\n            </div>\n          </div>\n        </>\n      )}\n    />\n  )\n}\n\nexport default Sidebar\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  const labels = data.site.siteMetadata.labels\n  const currentPage = 1\n  const postsPerPage = 3 // see limit in graphql query below\n  const nextPage = (currentPage + 1).toString()\n  const hasNextPage = data.allMarkdownRemark.totalCount > postsPerPage\n\n  const getTechTags = (tags) => {\n    const techTags = []\n    tags.forEach((tag, i) => {\n      labels.forEach((label) => {\n        if (tag === label.tag) {\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size}\n                                 color={label.color}/>)\n        }\n      })\n    })\n    return techTags\n  }\n\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]}/>\n      <div className=\"index-main\">\n        <div className=\"sidebar px-4 py-2\">\n          <Sidebar/>\n        </div>\n        <div className=\"post-list-main\">\n          {posts.map((post) => {\n            const tags = post.node.frontmatter.tags\n            return (\n              <div key={post.node.id} className=\"container mt-5\">\n                <Link\n                  to={post.node.fields.slug}\n                  className=\"text-dark\"\n                >\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                </Link>\n                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\n                </small>\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                <Link\n                  to={post.node.fields.slug}\n                  className=\"text-primary\"\n                >\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\n                </Link>\n                <div className=\"d-block\">\n                  {getTechTags(tags)}\n                </div>\n              </div>\n            )\n          })}\n          {hasNextPage &&\n          <div className=\"mt-4 text-center\">\n            <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\n              <span className=\"text-dark\">Next Page →</span>\n            </Link>\n          </div>\n          }\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n    query IndexQuery {\n        site {\n            siteMetadata {\n                title\n                author\n                labels {\n                    tag\n                    tech\n                    name\n                    size\n                    color\n                }\n            }\n        }\n        allMarkdownRemark(\n            limit: 3\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { published: { eq: true } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    excerpt(pruneLength: 200)\n                    html\n                    id\n                    frontmatter {\n                        title\n                        date(formatString: \"MMMM DD, YYYY\")\n                        tags\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default IndexPage\n\n","import React from \"react\"\n\nimport \"./tags.css\"\nimport { Link } from \"gatsby\"\n\nconst TechTag = (props) => {\n  const { tag, tech, name, size, color, should_link } = props\n\n  return (\n    <div className=\"d-inline-block p-1\">\n      <Link to={should_link ? `/tags/${tag}/` : \"\"}>\n        <button\n          className=\"tech-tag text-white\">\n          <p className=\"d-inline\">{tech} </p>\n          <div className=\"d-inline\" style={{ fontSize: size, color: color }}>\n            <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size}\n                 style={{ fill: `${color}` }}>\n              <title>{tech}</title>\n              <path\n                d={name}/>\n            </svg>\n          </div>\n        </button>\n      </Link>\n\n    </div>\n\n  )\n}\n\nexport default TechTag"],"sourceRoot":""}